[package]
name = "chaud"
version = "0.1.0"

readme = "README.md"
license.workspace = true
repository.workspace = true

description = '''
A hot-reloading library for Cargo workspaces designed for ease of use.
'''
categories = ["hot-reloading"]
keywords = ["development-tools"]

edition = "2024"
rust-version = "1.86"

[features]

# Do not print a warning to stderr if logging is disabled for Chaud.
#
# See https://docs.rs/chaud#logging
silence-log-level-warning = []

# Enable hot-reloading functionality.
#
# SAFETY: See https://docs.rs/chaud#safety
unsafe-hot-reload = [
    "dep:aho-corasick",
    "dep:anyhow",
    "dep:camino",
    "dep:foldhash",
    "dep:jiff",
    "dep:hashbrown",
    "dep:log",
    "dep:nanoserde",
    "dep:notify",
    "dep:object",
    "dep:rustc-demangle",
    "dep:toml_edit",
    "dep:topological-sort",
    "dep:parking_lot",
]


[dependencies]
aho-corasick = { version = "1.1.3", optional = true }
anyhow = { version = "1.0.98", optional = true }
camino = { version = "1.1.9", optional = true }
foldhash = { version = "0.1.5", optional = true }
log = { version = "0.4.27", optional = true }
notify = { version = "8.0.0", optional = true }
parking_lot = { version = "0.12.3", optional = true }
rustc-demangle = { version = "0.1.24", optional = true }
toml_edit = { version = "0.22.24", optional = true }
topological-sort = { version = "0.2.2", optional = true }

[dependencies.hashbrown]
version = "0.15.2"
optional = true
default-features = false
features = ["default-hasher", "inline-more"]

[dependencies.jiff]
version = "0.2.10"
optional = true
default-features = false
features = ["std"]

[dependencies.nanoserde]
version = "0.2.1"
optional = true
default-features = false
features = ["json"]

[dependencies.object]
version = "0.36.7"
optional = true
default-features = false
features = ["read_core"]

[target.'cfg(windows)'.dependencies.object]
version = "0.36.7"
optional = true
default-features = false
features = ["pe"]

[target.'cfg(target_os = "macos")'.dependencies.object]
version = "0.36.7"
optional = true
default-features = false
features = ["macho"]

[target.'cfg(all(unix, not(target_os = "macos")))'.dependencies.object]
version = "0.36.7"
optional = true
default-features = false
features = ["elf"]

[lints]
workspace = true

[dev-dependencies]
pretty_assertions = "1.4.1"

[package.metadata.docs.rs]
all-features = true
# No need to build multiple targets, the docs are all the same.
targets = []
