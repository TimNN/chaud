name: ci
on:
  pull_request:
  push:
    branches:
      - master
      - dev
  schedule:
    # Daily, at a semi-randomly chosen time.
    - cron: "37 3 * * *"

permissions:
  contents: read

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        host: [macos, linux, windows-msvc, windows-gnu]
        rust: ["stable", "beta", "nightly"]
        include:
          # host -> OS mappings
          - host: macos
            os: macos-latest
          - host: linux
            os: ubuntu-latest
          - host: windows-msvc
            os: windows-latest
          - host: windows-gnu
            os: windows-latest

          # toolchain suffix
          - host: windows-gnu
            rust-suffix: -x86_64-pc-windows-gnu

          # rust channel config
          - rust: stable
            components: clippy, rustfmt
          - rust: beta
            components: clippy, rustfmt
            # FIXME: Move this to `Cargo.toml` once it reaches stable.
            lints: '"-Aclippy::unnecessary_debug_formatting"'
          - rust: nightly
            components: clippy, miri, rust-src, rustfmt
            # FIXME: Move this to `Cargo.toml` once it reaches stable.
            lints: '"-Aclippy::unnecessary_debug_formatting"'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}${{ matrix.rust-suffix }}
          components: ${{ matrix.components }}

      - name: Check Format
        if: ${{ matrix.rust == 'stable' }}
        run: cargo fmt --all --check

      - name: Clippy Production Mode
        run: cargo clippy --workspace -- -D warnings ${{ matrix.lints }}

      - name: Clippy Development Mode
        run:
          cargo clippy --workspace --all-features -- -D warnings ${{
          matrix.lints }}

      - name: Rustdoc
        run:
          cargo doc --workspace --all-features --no-deps
          --document-private-items
        env:
          RUSTDOCFLAGS: -D warnings
        continue-on-error: ${{ matrix.rust != 'stable' }}

      - name: Unit Test Production Mode
        run: cargo test --workspace

      - name: Unit Test Development Mode
        run: cargo test --workspace --all-features

      - name: Unit Test Production Mode (Miri)
        if: ${{ matrix.rust == 'nightly' }}
        run: cargo miri test -p chaud

      - name: Unit Test Development Mode (Miri)
        if: ${{ matrix.rust == 'nightly' }}
        run: cargo miri test -p chaud --all-features
